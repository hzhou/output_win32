include: win32/std.def

subcode: _autoload
    $register_prefix(hdc) HDC
    $register_prefix(hfont) HFONT
    $register_prefix(hbrush) HBRUSH
    $register_prefix(hpen) HPEN

    $register_name(hobj) HGDIOBJ
    $register_prefix(rect) RECT

    $register_prefix(bmph) BITMAPINFOHEADER
    $register_prefix(bmp) DWORD *

#---------------------------------------- 
subcode: on_paint
    $uselib gdi32
    $local PAINTSTRUCT ps
    $local HDC hdc
    hdc = BeginPaint(hwnd, &ps)
    BLOCK
    EndPaint(hwnd, &ps)

    subcode: background(color)
        $if ps.fErase
            $local hbrush
            $call create_brush, hbrush, $(color)
            FillRect(hdc, &ps.rcPaint, hbrush)
            
subcode: center_text(rect, msg)
    SetTextAlign(hdc, TA_CENTER|TA_BASELINE)
    TextOut(hdc, $(rect).right/2, $(rect).bottom/2, $(msg), strlen($(msg)))

subcode: fill_rect(rect, color)
    &call quick_brush, $(color)
        FillRect(hdc, &$(rect), t_brush)

subcode: fill_hwnd(hwnd, color)
    $call get_rect_client, $(hwnd)
    $call fill_rect, rect_client, $(color)

subcode: get_rect_client(hwnd)
    $local rect_client
    GetClientRect($(hwnd), &rect_client)

subcode: set_rect(rect, left, top, right, bot)
    $(rect).left=$(left)
    $(rect).top=$(top)
    $(rect).right=$(right)
    $(rect).bottom=$(bot)

#---------------------------------------- 
subcode: get_hdc(hwnd)
    hdc = GetDC($(hwnd))
    BLOCK
    ReleaseDC($(hwnd), hdc)

#---------------------------------------- 
subcode: quick_gdi(obj)
    $temp HGDIOBJ old
    $(old)=SelectObject(hdc, $(obj))
    BLOCK
    SelectObject(hdc, $(old))

subcode: with_gdi(objs)
    $(for:$(objs))
        SelectObject(hdc, $1)
    BLOCK

#---------------------------------------- 
# -- PEN ---------------------
subcode: create_pen(var, @plist)
    $(mset:ps=PS_SOLID,pw=0,color=0)
    $(ifeach:p:3=PS_)
        $(export:ps=$(p))
    $(ifeach:p~[0-9]+)
        $(export:pw=$(p))
    $(ifeach:p:6=color_)
        $(export:color=$(p))
    t_pen=CreatePen($(ps), $(pw), $(color))

subcode: quick_pen(@plist)
    $local HPEN t_pen
    $call create_pen, t_pen, $(plist)
    &call quick_gdi, t_pen
        BLOCK
    DeleteObject(t_pen)

# -- Brush -------------------------
subcode: create_brush(var, @plist)
    $(set:color=0)
    $(ifeach:p:6=color_ or p:2=0x)
        $(export:color=$(p))
    $(var)=CreateSolidBrush($(color))

subcode: quick_brush(@plist)
    $local HBRUSH t_brush
    $call create_brush, t_brush, $(plist)
    &call quick_gdi, t_brush
        BLOCK
    DeleteObject(t_brush)

# -- Font -----------------------------------
subcode: create_font(var, name, size)
    $(var) = CreateFont ($(size), 0, 0, 0, FW_DONTCARE, FALSE, FALSE, FALSE, ANSI_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY, FF_DONTCARE, $(name))

subcode: quick_font(fontname, size)
    $local HFONT t_font
    $call create_font, t_font, $(fontname), $(size)
    &call quick_gdi, t_font
        BLOCK
    DeleteObject(t_font)

